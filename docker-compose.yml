version: '3.7'

services:
  web:
    container_name: spenger-survival-web
    image: spenger_survival_web:latest
    build:
      context: ../spenger-survival-frontend
      dockerfile: Dockerfile
    restart: always
    networks:
      - spenger-survival-network
    ports:
      - '80:80'
    depends_on:
      - backend

  backend:
    container_name: spenger-survival-backend
    image: spenger_survival_backend:latest
    build:
      context: ../spenger-survival-backend
      dockerfile: Dockerfile
    restart: always
    environment:
      - NODE_ENV=production
      - PORT=4000
      - HOST=db
      - DATABASE_PORT=3306
      - SYNCHRONIZE=true
    networks:
      - spenger-survival-network
    env_file:
      - .backend.env
    depends_on:
      - db

  db:
    container_name: spenger-survival-db
    image: mysql:5.7.28
    restart: always
    env_file:
      - .database.env
    ports:
      - '3306:3306'
    volumes:
      - spenger-survival-volume:/var/lib/mysql
    networks:
      - spenger-survival-network

  admin-web:
    container_name: spenger-survival-admin-web
    image: phpmyadmin/phpmyadmin:4.8
    restart: always
    ports:
      - '8100:80'
    environment:
      - PMAHOST=db
    networks:
      - spenger-survival-network
    depends_on:
      - db

networks:
  spenger-survival-network:

volumes:
  spenger-survival-volume:
